name: ai-automation-stack

services:
  # ---------- Postgres for n8n (+ your app DB) ----------
  db:
    image: postgres:15-alpine
    container_name: ai_db
    restart: unless-stopped
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 10s
      timeout: 5s
      retries: 10
    volumes:
      - pg_data:/var/lib/postgresql/data
      - ./db-init:/docker-entrypoint-initdb.d:ro
    # Optional: expose to host DB tools
    # ports:
    #   - "5432:5432"

  # ---------- n8n ----------
  n8n:
    image: n8nio/n8n:latest
    container_name: ai_n8n
    restart: unless-stopped
    depends_on:
      db:
        condition: service_healthy
    env_file: .env
    environment:
      # DB (n8n internal DB)
      DB_TYPE: postgresdb
      DB_POSTGRESDB_HOST: db
      DB_POSTGRESDB_PORT: 5432
      DB_POSTGRESDB_DATABASE: ${POSTGRES_DB}
      DB_POSTGRESDB_USER: ${POSTGRES_USER}
      DB_POSTGRESDB_PASSWORD: ${POSTGRES_PASSWORD}

      # Core
      N8N_HOST: ${N8N_HOST}
      N8N_PORT: ${N8N_PORT}
      WEBHOOK_URL: ${WEBHOOK_URL}
      GENERIC_TIMEZONE: ${GENERIC_TIMEZONE}

      # Auth + encryption
      N8N_BASIC_AUTH_ACTIVE: ${N8N_BASIC_AUTH_ACTIVE}
      N8N_BASIC_AUTH_USER: ${N8N_BASIC_AUTH_USER}
      N8N_BASIC_AUTH_PASSWORD: ${N8N_BASIC_AUTH_PASSWORD}
      N8N_ENCRYPTION_KEY: ${N8N_ENCRYPTION_KEY}
    ports:
      - "${N8N_PORT}:5678"
    volumes:
      - n8n_data:/home/node/.n8n

  # ---------- Qdrant (Vector DB) ----------
  qdrant:
    image: qdrant/qdrant:latest
    container_name: ai_qdrant
    restart: unless-stopped
    environment:
      # enable API key auth; header:  api-key: <key>
      QDRANT__SERVICE__API_KEY: ${QDRANT_API_KEY}
    ports:
      - "${QDRANT_HTTP_PORT}:6333"
      - "${QDRANT_GRPC_PORT}:6334"
    volumes:
      - qdrant_storage:/qdrant/storage

  # ---------- Ollama (Local LLM) ----------
  ollama:
    image: ollama/ollama:latest
    container_name: ai_ollama
    restart: unless-stopped
    ports:
      - "${OLLAMA_PORT}:11434"
    volumes:
      - ollama_data:/root/.ollama
    # GPU (for Linux servers with NVIDIA; leave commented on Windows)
    # deploy:
    #   resources:
    #     reservations:
    #       devices:
    #         - capabilities: ["gpu"]

volumes:
  n8n_data:
  pg_data:
  qdrant_storage:
  ollama_data:
